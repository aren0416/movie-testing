{"version":3,"sources":["components/Movie.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","className","src","alt","map","genre","index","prototype","Protypes","number","isRequired","string","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAGMA,EAAQ,SAAC,GAAiD,EAA/CC,GAAgD,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACjD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQH,MAAOA,EAAOO,IAAKP,IACrC,sBAAKK,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,mBAAGI,UAAU,iBAAb,SAA+BH,IAC/B,6BACGE,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,6BAAiBD,GAARC,eAQrBZ,EAAMa,UAAY,CAChBZ,GAAIa,IAASC,OAAOC,WACpBd,MAAOY,IAASG,OAAOD,WACvBb,KAAMW,IAASC,OAAOC,WACtBZ,QAASU,IAASG,OAAOD,WACzBX,OAAQS,IAASG,OAAOD,YAGXhB,QC6BAkB,E,4MArDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,0DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CACZN,SACAD,WAAW,IAVH,2C,kEAeVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,8BACGD,EACC,qBAAKb,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,oCAGF,qBAAKA,UAAU,SAAf,SACGc,EAAOX,KAAI,SAACmB,GACX,OACE,cAAC,EAAD,CAEE5B,GAAI4B,EAAM5B,GACVC,MAAO2B,EAAM3B,MACbC,KAAM0B,EAAM1B,KACZC,QAASyB,EAAMzB,QACfC,OAAQwB,EAAMC,mBACdxB,OAAQuB,EAAMvB,QANTuB,EAAM5B,e,GArCX8B,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba03a9e5.chunk.js","sourcesContent":["import React from \"react\";\nimport Protypes from \"prop-types\";\n\nconst Movie = ({ id, title, year, summary, poster, genres }) => {\n  return (\n    <div className=\"movie\">\n      <img src={poster} title={title} alt={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <p className=\"movie__summary\">{summary}</p>\n        <ul>\n          {genres.map((genre, index) => (\n            <li key={index}>{genre}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovie.prototype = {\n  id: Protypes.number.isRequired,\n  title: Protypes.string.isRequired,\n  year: Protypes.number.isRequired,\n  summary: Protypes.string.isRequired,\n  poster: Protypes.string.isRequired,\n};\n\nexport default Movie;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./components/Movie\";\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\"\n    );\n    this.setState({\n      movies,\n      isLoading: false,\n    });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <div>\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">로딩중..</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  year={movie.year}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}